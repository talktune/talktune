const colors = require("tailwindcss/colors");

module.exports = {
  content: [
    "./src/**/*.tsx",
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  darkMode: "class",
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    fontFamily: {
      serif: ["serif"],
      heading: [
        "var(--font-family-heading)",
        "Inter",
        "SF Pro Text",
        "system-ui",
      ],
      sans: ["var(--font-family-sans)"],
      monospace: [`SF Mono`, `ui-monospace`, `Monaco`, "Monospace"],
    },
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        dark: {
          ...colors.slate,
          DEFAULT: colors.slate[950],
          foreground: colors.slate[100],
        },
        // primary: {
        //   DEFAULT: "#339999",
        //   50: "#B8E0E0",
        //   100: "#A8D9D9",
        //   200: "#89CCCC",
        //   300: "#6ABFBF",
        //   400: "#4CB2B2",
        //   500: "#339999",
        //   600: "#287777",
        //   700: "#1D5555",
        //   800: "#123333",
        //   900: "#061111",
        //   950: "#030606",
        //   foreground: "#FFFFFF",
        // },
        // secondary: {
        //   DEFAULT: "hsl(var(--secondary))",
        //   foreground: "hsl(var(--secondary-foreground))",
        // },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },

        // LIGHT COLOURS
        primaryBg: "rgb(255 255 255)",
        secondaryBg: "rgb(255 255 255)",
        secondaryBgGray: "rgb(243 244 246)",
        // whiteText: "rgb(0 0 0)",
        grayBg: "rgb(229 231 235)",
        grayBgLow: "rgb(233 236 239)",
        grayBgHigh: "rgb(107 114 128)",
        grayBgModal: "rgb(107 114 128)",
        grayTxt: "#848484",
        darkGrayColor: "#808080",
        grayBgLow2: "#DADCE0 ",
        grayLightInput: "#F8F8F8",
        redBg: "rgb(194 31 0)",
        redLowBg: "rgb(251 210 211)",
        yellowBg: "rgb(254 240 138)",
        orangeBg: "rgb(254 215 170)",
        orangeBgLow: "rgb(252 249 240)",
        greenBg: "rgb(187 247 208)",
        greenBgLow: "rgb(240 245 240)",
        blueBg: "rgb(51 154 153)",
        blueLightBg: "rgb(228 244 244)",
        blueIcon: "#1A479A",
        whiteBg: "rgb(255 255 255)",
        darkGreenColor: "#339999",
        primaryButtonBg: "rgb(51 154 153)",
        negativeButton: "#C21F00",
        btnDisable: "#B6B6B6",
        secondaryButtonBg: "rgb(194 31 0)",
        primaryButtonHover: "rgb(27 108 109)",
        primaryButtonHoverLight: "rgb(68 202 201)",
        secondaryButtonHover: "rgb(161 6 1)",
        whiteButtonBg: "rgb(255 255 255)",
        whiteButtonHover: "rgb(229 231 235)",
        bordergray: "#EAEAEA",
        grayWordContainer: "#D9D9D9",
        grayCountContainer: "#E6E6E6",
        sidebarBtnHover: "rgb(243 244 246)",
        grayButtonBg: "rgb(75 85 99)",
        grayButtonHover: "rgb(55 65 81)",
        interviewRedButton: "rgb(255, 0, 15)",
        interviewGrayButton: "rgb(44, 46, 47)",
        interviewGrayButtonHover: "rgb(61, 64, 64)",
        borderWhite: "#F5F5F5",
        blueBtn: "#1EAAE7",
        whiteButtonText: "rgb(0 0 0)",
        labelText: "rgb(0 0 0)",
        inputErrorText: "rgb(239 68 68)",
        grayText: "rgb(55 65 81)",
        lightGrayText: "#969BA0",
        blueText: "rgb(51 154 153)",
        redText: "rgb(194 31 0)",
        redTextLow: "rgb(255 77 75)",
        yellowText: "rgb(249 151 0)",
        orangeText: "rgb(234 88 12)",
        greenText: "rgb(34 197 94)",
        purpleText: "rgb(168 85 247)",
        whiteText: "rgb(255 255 255)",
        blackText: "rgb(0 0 0)",
        sidebarHeading: "rgb(239 68 68)",
        lowGrayText: "#8F8F8F",
        blueTextHover: "rgb(27 108 109)",
        gradeRed: "#C21F00",
        gradeGreen: "#339999",
        gradeYellow: "#FBBC05",
        focusRing: "rgb(51 154 153)",
        focusRingRed: "rgb(194 31 0)",
        focusBorder: "rgb(51 154 153)",
        focusBorderRed: "rgb(194 31 0)",

        grayBorder: "rgb(209 213 219)",
        redBorder: "rgb(194 31 0)",
        greenBorder: "rgb(34 197 94)",
        blueBorder: "rgb(153 204 204)",
        bgHover: "rgb(229 231 235)",

        toolTipBg: "rgb(38 38 38)",
        precentageText75: "rgb(0 255 102)",
        precentageText50: "rgb(252 211 77)",
        precentageText25: "rgb(234 88 12)",
        precentageText0: "rgb(255 0 0)",
        grayBtn: "#535353",
        redBtn: "#FF4343",

        //new Colors
        primary: "rgba(15, 153, 24, 1)",
        secondary: "rgba(46, 144, 250, 1)",

        redBgNormal: "rgba(194, 31, 0, 1)",
        gray1: "rgba(245, 245, 245, 1)",
        gray2: "rgba(223, 223, 223, 1)",
        gray3: "rgba(158, 158, 158, 1)",
        gray4: "rgba(129, 129, 129, 1)",
        gray5: "rgba(99, 99, 99, 1)",
        gray6: "rgba(70, 70, 70, 1)",
        black: "rgba(34, 35, 37, 1)",
        white: "rgba(255, 255, 255, 1)",
        white2: "rgba(247, 247, 247, 1)",
        grayNormal: "rgba(99, 99, 99, 1)",
        creamWhite: "rgba(218, 219, 221, 1)",
        grayBorderNew: "rgba( (217,217,217) )",
        blue1: "rgba(213, 233, 254, 1)",

        // DARK COLOURS
        bgDark: "#121212",
        primaryBgDark: "rgb(28 30 31)",
        secondaryBgDark: "rgb(21 23 24)",
        grayBgDark: "rgb(55 65 81)",
        grayBgLowDark: "rgb(233 236 239)",
        grayBgHighDark: "rgb(107 114 128)",
        grayBgModalDark: "rgb(107 114 128)",
        darkGreenColorDark: "#339999",
        lowGrayTextDark: "#8F8F8F",
        redBgDark: "rgb(194 31 0)",
        redLowBgDark: "rgb(251 210 211)",
        yellowBgDark: "rgb(254 240 138)",
        orangeBgDark: "rgb(254 215 170)",
        greenBgDark: "rgb(187 247 208)",
        blueBgDark: "rgb(51 154 153)",
        whiteBgDark: "rgb(255 255 255)",
        darkBtn: "#3D3D3D",

        tansparentBlack: "rgba(0, 0, 0, 0.4)",
        primaryButtonBgDark: "rgb(51 154 153)",
        negativeButtonDark: "#C21F00",
        btnDisableDark: "#B6B6B6",
        secondaryButtonBgDark: "rgb(194 31 0)",
        primaryButtonHoverDark: "rgb(27 108 109)",
        primaryButtonHoverLightDark: "rgb(68 202 201)",
        secondaryButtonHoverDark: "rgb(161 6 1)",
        whiteButtonBgDark: "rgb(255 255 255)",
        whiteButtonHoverDark: "rgb(229 231 235)",
        sidebarBtnHoverDark: "hover:bg-indigo-100",
        grayButtonBgDark: "rgb(75 85 99)",
        grayButtonHoverDark: "rgb(55 65 81)",
        blueBtnDark: "#1EAAE7",
        whiteButtonTextDark: "text-gray-800",
        labelTextDark: "rgb(255 255 255)",
        inputErrorTextDark: "rgb(239 68 68)",
        grayTextDark: "rgb(156 163 175)",
        lightGrayTextDark: "#969BA0",
        blueTextDark: "rgb(51 154 153)",
        redTextDark: "rgb(194 31 0)",
        redTextLowDark: "rgb(255 77 75)",
        yellowTextDark: "rgb(249 151 0)",
        orangeTextDark: "rgb(251 146 60)",
        greenTextDark: "rgb(34 197 94)",
        whiteTextDark: "rgb(255 255 255)",
        blackTextDark: "rgb(0 0 0)",
        sidebarHeadingDark: "rgb(239 68 68)",

        blueTextHoverDark: "rgb(27 108 109)",

        focusRingDark: "rgb(51 154 153)",
        focusBorderDark: "rgb(51 154 153)",
        focusRingRedDark: "rgb(194 31 0)",
        focusBorderRedDark: "rgb(194 31 0)",

        grayBorderDark: "rgb(75 85 99)",
        redBorderDark: "rgb(194 31 0)",

        bgHoverDark: "rgb(55 65 81)",

        toolTipBgDark: "rgb(38 38 38)",

        // SKELETON
        skeletonContent: "rgb(212 212 212)",
        skeletonContentDark: "rgb(82 82 82)",
        skeletonBg: "rgb(229 229 229)",
        skeletonBgDark: "rgb(38 38 38)",
        skeletonBgSecondary: "rgb(180,180,180)",
        skeletonBgSecondaryDark: "rgb(74, 74, 74)",
        skeletonShimmer: "rgba(255, 255, 255, 0.6)",
        skeletonShimmerDark: "rgba(255, 255, 255, 0.2)",

        // GRADIENTS
        gradientLMockTest: "rgb(0, 101, 235)",
        gradientRMockTest: "rgb(0, 183, 248)",
        gradientLRandom: "rgb(160, 86, 204)",
        gradientRRandom: "rgb(176, 106, 179)",
        gradientLUpcoming: "rgb(205, 201, 196)",
        gradientRUpcoming: "rgb(87, 100, 110)",
        gradientLOneMin: "rgb(151, 42, 230)",
        gradientROneMin: "rgb(98, 111, 191)",
        gradientLPracticeSpeech: "rgb(51, 178, 181)",
        gradientRPracticeSpeech: "rgb(60, 103, 150)",
        gradientLDynamic: "rgb(69, 104, 220)",
        gradientRDynamic: "rgb(248, 136, 231)",
        gradientLPersonalize: "rgb(160, 86, 204)",
        gradientRPersonalize: "rgb(176, 106, 179)",
        // gradientLIelts: "rgb(160, 86, 204)",
        // gradientRIelts: "rgb(176, 106, 179)",
        gradientLNodeJs: "rgb(250, 209, 38)",
        gradientRNodeJs: "rgb(255, 84, 79)",
        gradientLProjectManager: "rgb(152, 224, 95)",
        gradientRProjectManager: "rgb(27, 227, 164)",
        gradientLJavascript: "rgb(251, 86, 140)",
        gradientRJavascript: "rgb(248, 111, 100)",
        gradientLSelfIntro: "rgb(255, 126, 95)",
        gradientRSelfIntro: "rgb(254, 180, 123)",
        gradientLMachineLearning: "rgb(0, 4, 40)",
        gradientRMachineLearning: "rgb(0, 78, 146)",
      },
      custom: {
        loader: {
          border: "6px solid rgb(243 243 243)",
          borderTop: "6px solid rgb(136 136 136)",
          borderRadius: "50%",
          width: "40px",
          height: "40px",
          animation: "spin 1s linear infinite",
        },

        gradients: {
          linearGradientRed:
            "linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(224,48,18,1) 0%, rgba(255,252,0,1) 94%)",
          linearGradientOrange:
            "linear-gradient(90deg, rgba(255, 252, 0, 1) 0%, rgba(17, 190, 13, 1) 100%)",
          linearGradientGreen:
            "linear-gradient(90deg, rgba(17, 190, 13, 1) 0%, rgba(255, 252, 0, 1) 100%)",
          linearGradientYellow:
            "linear-gradient(90deg, rgba(255, 252, 0, 1) 0%, rgba(224, 48, 18, 1) 100%)",
        },
      },

      backgroundColor: {
        white: "#ffffff",
        black: "#000000",
      },
      backgroundImage: {
        "gradient-radial": "radial-gradient(var(--tw-gradient-stops))",
        "gradient-conic":
          "conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))",
      },
      dropShadow: {
        "3xl": ["0 8px 5px rgba(0, 0, 0, 0.2)"],
        "4xl": ["0 3px 0px rgba(51, 154, 153, 0.5)"],
        "5xl": ["0 3px 1px rgba(0, 0, 0, 0.25)"],
      },

      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      padding: {
        container: "var(--container-padding)",
      },
      keyframes: {
        wiggle: {
          "0%, 100%": {
            transform: "rotate(0deg)",
          },
          "50%": {
            transform: "rotate(10deg)",
          },
        },
        shimmer: {
          "100%": { transform: "translateX(100%)" },
        },
        pulse: {
          "0%, 100%": {
            opacity: "0",
          },
          "50%": {
            opacity: "1",
          },
        },
        pingCustom: {
          "0%,50%": {
            opacity: "0",
          },
          "50%,90%": {
            opacity: "1",
          },
          "90%,100%": {
            opacity: "0",
          },
        },
        "accordion-down": {
          from: { height: 0 },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: 0 },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
        pulse: "pulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite",
        pingCustom: "pingCustom 1s cubic-bezier(0, 0, 0.2, 1) infinite",
        wiggle: "wiggle 1s ease-in-out infinite", // Add this line
      },
    },
  },
  plugins: [require("tailwindcss-animate")],
};
